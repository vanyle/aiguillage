// This file is auto-generated by @hey-api/openapi-ts

export type AllConfigObjBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A JSON-encoded object describing the configuration of the service
     */
    config: {
        [key: string]: (string);
    };
};

export type ConfigObjBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A JSON-encoded string containing the configured value
     */
    config: string;
};

export type DeletedAt = {
    Time: string;
    Valid: boolean;
};

export type ErrorDetail = {
    /**
     * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
     */
    location?: string;
    /**
     * Error message text
     */
    message?: string;
    /**
     * The value at the given location
     */
    value?: unknown;
};

export type ErrorModel = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * Optional list of individual error details
     */
    errors?: Array<ErrorDetail>;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * HTTP status code
     */
    status?: number;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string;
};

export type GenericOutputBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
};

export type OutputWithIdBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * The id of the object created
     */
    id: string;
};

export type Service = {
    CreatedAt: string;
    DeletedAt: DeletedAt;
    Hostname: string;
    ID: number;
    Name: string;
    UpdatedAt: string;
    Version: string;
};

export type ServiceDescBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A description of the service
     */
    service: Service;
};

export type ServiceListBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A list of available services
     */
    services: Array<Service>;
};

export type DeleteConfigData = {
    /**
     * The ID of the service
     */
    id?: number;
};

export type DeleteConfigResponse = GenericOutputBody | ErrorModel;

export type GetConfigData = {
    /**
     * The ID of the service
     */
    id?: number;
};

export type GetConfigResponse = AllConfigObjBody | ErrorModel;

export type SetConfigData = {
    /**
     * The config key to set
     */
    key?: string;
    /**
     * The ID of the service
     */
    serviceId?: number;
    /**
     * The config value to set
     */
    value?: string;
};

export type SetConfigResponse = GenericOutputBody | ErrorModel;

export type GetConfigItemData = {
    /**
     * The configuration key
     */
    key?: string;
    /**
     * The ID of the service
     */
    serviceId?: number;
};

export type GetConfigItemResponse = ConfigObjBody | ErrorModel;

export type RegisterData = {
    /**
     * Name of the service registrating itself
     */
    name?: string;
};

export type RegisterResponse = OutputWithIdBody | ErrorModel;

export type SearchServicesData = {
    /**
     * The name of the service to search for
     */
    name?: string;
};

export type SearchServicesResponse = ServiceListBody | ErrorModel;

export type GetSelfData = {
    /**
     * Your service name
     */
    name?: string;
};

export type GetSelfResponse = ServiceDescBody | ErrorModel;

export type GetSelfConfigData = {
    /**
     * Your service name
     */
    name?: string;
};

export type GetSelfConfigResponse = AllConfigObjBody | ErrorModel;

export type SetSelfConfigData = {
    /**
     * The config key to set
     */
    key?: string;
    /**
     * Your service name
     */
    name?: string;
    /**
     * The config value to set
     */
    value?: string;
};

export type SetSelfConfigResponse = GenericOutputBody | ErrorModel;

export type GetSelfServicesData = {
    /**
     * Your service name
     */
    name?: string;
};

export type GetSelfServicesResponse = ServiceListBody | ErrorModel;

export type DeleteServiceData = {
    /**
     * The ID of the service
     */
    id?: number;
};

export type DeleteServiceResponse = GenericOutputBody | ErrorModel;

export type GetServiceData = {
    /**
     * The ID of the service
     */
    id?: number;
};

export type GetServiceResponse = ServiceDescBody | ErrorModel;

export type CreateServiceData = {
    /**
     * A Hostname or IP pointing to the service
     */
    hostname?: string;
    /**
     * Name of the service registrating itself
     */
    name?: string;
    /**
     * Version of the service
     */
    version?: string;
};

export type CreateServiceResponse = OutputWithIdBody | ErrorModel;

export type GetServicesResponse = ServiceListBody | ErrorModel;

export type SetHostnameData = {
    /**
     * The machine hosting the service
     */
    hostname?: string;
    /**
     * The ID of the service
     */
    id?: number;
};

export type SetHostnameResponse = GenericOutputBody | ErrorModel;

export type SetVersionData = {
    /**
     * The ID of the service
     */
    id?: number;
    /**
     * The version of the service
     */
    version?: string;
};

export type SetVersionResponse = GenericOutputBody | ErrorModel;

export type $OpenApiTs = {
    '/config': {
        delete: {
            req: DeleteConfigData;
            res: {
                /**
                 * OK
                 */
                200: GenericOutputBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
        get: {
            req: GetConfigData;
            res: {
                /**
                 * OK
                 */
                200: AllConfigObjBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
        post: {
            req: SetConfigData;
            res: {
                /**
                 * OK
                 */
                200: GenericOutputBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/configitem': {
        get: {
            req: GetConfigItemData;
            res: {
                /**
                 * OK
                 */
                200: ConfigObjBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/register': {
        put: {
            req: RegisterData;
            res: {
                /**
                 * OK
                 */
                200: OutputWithIdBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/searchservices': {
        get: {
            req: SearchServicesData;
            res: {
                /**
                 * OK
                 */
                200: ServiceListBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/self': {
        get: {
            req: GetSelfData;
            res: {
                /**
                 * OK
                 */
                200: ServiceDescBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/selfconfig': {
        get: {
            req: GetSelfConfigData;
            res: {
                /**
                 * OK
                 */
                200: AllConfigObjBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
        post: {
            req: SetSelfConfigData;
            res: {
                /**
                 * OK
                 */
                200: GenericOutputBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/selfservices': {
        get: {
            req: GetSelfServicesData;
            res: {
                /**
                 * OK
                 */
                200: ServiceListBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/service': {
        delete: {
            req: DeleteServiceData;
            res: {
                /**
                 * OK
                 */
                200: GenericOutputBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
        get: {
            req: GetServiceData;
            res: {
                /**
                 * OK
                 */
                200: ServiceDescBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
        put: {
            req: CreateServiceData;
            res: {
                /**
                 * OK
                 */
                200: OutputWithIdBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/services': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: ServiceListBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/seturl': {
        post: {
            req: SetHostnameData;
            res: {
                /**
                 * OK
                 */
                200: GenericOutputBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
    '/setversion': {
        post: {
            req: SetVersionData;
            res: {
                /**
                 * OK
                 */
                200: GenericOutputBody;
                /**
                 * Error
                 */
                default: ErrorModel;
            };
        };
    };
};