// This file is auto-generated by @hey-api/openapi-ts

export const $AllConfigObjBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/AllConfigObjBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        config: {
            additionalProperties: {
                type: 'string'
            },
            description: 'A JSON-encoded object describing the configuration of the service',
            type: 'object'
        }
    },
    required: ['config'],
    type: 'object'
} as const;

export const $ConfigObjBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/ConfigObjBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        config: {
            description: 'A JSON-encoded string containing the configured value',
            examples: ['[]'],
            type: 'string'
        }
    },
    required: ['config'],
    type: 'object'
} as const;

export const $DeletedAt = {
    additionalProperties: false,
    properties: {
        Time: {
            format: 'date-time',
            type: 'string'
        },
        Valid: {
            type: 'boolean'
        }
    },
    required: ['Time', 'Valid'],
    type: 'object'
} as const;

export const $ErrorDetail = {
    additionalProperties: false,
    properties: {
        location: {
            description: "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            type: 'string'
        },
        message: {
            description: 'Error message text',
            type: 'string'
        },
        value: {
            description: 'The value at the given location'
        }
    },
    type: 'object'
} as const;

export const $ErrorModel = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/ErrorModel.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        detail: {
            description: 'A human-readable explanation specific to this occurrence of the problem.',
            examples: ['Property foo is required but is missing.'],
            type: 'string'
        },
        errors: {
            description: 'Optional list of individual error details',
            items: {
                '$ref': '#/components/schemas/ErrorDetail'
            },
            type: 'array'
        },
        instance: {
            description: 'A URI reference that identifies the specific occurrence of the problem.',
            examples: ['https://example.com/error-log/abc123'],
            format: 'uri',
            type: 'string'
        },
        status: {
            description: 'HTTP status code',
            examples: [400],
            format: 'int64',
            type: 'integer'
        },
        title: {
            description: 'A short, human-readable summary of the problem type. This value should not change between occurrences of the error.',
            examples: ['Bad Request'],
            type: 'string'
        },
        type: {
            default: 'about:blank',
            description: 'A URI reference to human-readable documentation for the error.',
            examples: ['https://example.com/errors/example'],
            format: 'uri',
            type: 'string'
        }
    },
    type: 'object'
} as const;

export const $GenericOutputBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/GenericOutputBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        }
    },
    type: 'object'
} as const;

export const $OutputWithIdBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/OutputWithIdBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        id: {
            description: 'The id of the object created',
            examples: ['0'],
            type: 'string'
        }
    },
    required: ['id'],
    type: 'object'
} as const;

export const $Service = {
    additionalProperties: false,
    properties: {
        CreatedAt: {
            format: 'date-time',
            type: 'string'
        },
        DeletedAt: {
            '$ref': '#/components/schemas/DeletedAt'
        },
        Hostname: {
            type: 'string'
        },
        ID: {
            format: 'int64',
            type: 'integer'
        },
        Name: {
            type: 'string'
        },
        UpdatedAt: {
            format: 'date-time',
            type: 'string'
        },
        Version: {
            type: 'string'
        }
    },
    required: ['ID', 'Name', 'Version', 'Hostname', 'CreatedAt', 'UpdatedAt', 'DeletedAt'],
    type: 'object'
} as const;

export const $ServiceDescBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/ServiceDescBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        service: {
            '$ref': '#/components/schemas/Service',
            description: 'A description of the service'
        }
    },
    required: ['service'],
    type: 'object'
} as const;

export const $ServiceListBody = {
    additionalProperties: false,
    properties: {
        '$schema': {
            description: 'A URL to the JSON Schema for this object.',
            examples: ['http://localhost:8080/schemas/ServiceListBody.json'],
            format: 'uri',
            readOnly: true,
            type: 'string'
        },
        services: {
            description: 'A list of available services',
            examples: [[]],
            items: {
                '$ref': '#/components/schemas/Service'
            },
            type: 'array'
        }
    },
    required: ['services'],
    type: 'object'
} as const;